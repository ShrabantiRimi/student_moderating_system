import java.sql.*;
import javax.swing.*;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
public class p8advisor extends javax.swing.JFrame {
String f;
     public p8advisor(String f) {
         this.f=f;
        initComponents();
    }
    public p8advisor() {
        initComponents();
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        pk = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pk.setColumns(20);
        pk.setRows(5);
        jScrollPane1.setViewportView(pk);

        jButton1.setText("submit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(175, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addGap(124, 124, 124))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(60, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         try
        {            
           Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:derby://localhost:1527/studentM","admin3","admin3");
            String Query = "select  * from STUDENTREG where STUDENT_ID  LIKE '%"+f+"%'";
            PreparedStatement statement = con.prepareStatement(Query);
            ResultSet result = statement.executeQuery(); 
            //String Query="INSERT INTO STUDENTREG(STUDENT_NAME,STUDENT_FATHER_NAME,STUDENT_MOTHER_NAME,SSC_SCHOOLNAME,HSC_COLLEGENAME,LOCAL_GUARDIAN,GUARDIAN_PHONENUM,PERMANENT_ADDRESS,PRESENT_ADDRESS,FATHER_OCCUPATION,MOTHER_OCCUPATION,ADVISOR,STUDENT_PASSWORD,SSC_GPA,HSC_GPA,MOTHER_ANNUAL_INCOME,FATHER_ANNUAL_INCOME,DATE_OF_BATH,STUDENT_ID,STUDENT_EMAIL)VALUES('"+stuname.getText()+"' ,'"
                      //+stufather.getText()+ "'  , '"+stumother.getText()+"' , '" +ssc.getText() +"','"+hscc.getText() +"' , '"+localg.getText()+"', '"+gpnt.getText()+"', '"+fao.getText()+"','"+faani.getText()+"','"+mao.getText()+"','"+ste.getText()+"','"+pass.getText()+"','"+padd2.getText()+"','"+gpassc.getText()+"','"+gpahsc.getText() +"','"+adn.getText()+"','"+maai.getText()+"','"+dateofb.getText()+"','"+paddt.getText()+"','"+ids.getText()+"')";
            if (result.next())
            {   
                String STUDENT_NAME=result.getString("STUDENT_NAME").toString().trim();
                String STUDENT_FATHER_NAME=result.getString("STUDENT_FATHER_NAME").toString().trim();
                String STUDENT_MOTHER_NAME=result.getString("STUDENT_MOTHER_NAME").toString().trim();
                String SSC_SCHOOLNAME=result.getString("SSC_SCHOOLNAME").toString().trim();
                String HSC_COLLEGENAME=result.getString("HSC_COLLEGENAME").toString().trim();
                String LOCAL_GUARDIAN=result.getString("LOCAL_GUARDIAN").toString().trim();
                String GUARDIAN_PHONENUM=result.getString("GUARDIAN_PHONENUM").toString().trim();
                String PERMANENT_ADDRESS=result.getString("PERMANENT_ADDRESS").toString().trim();
                String PRESENT_ADDRESS=result.getString("PRESENT_ADDRESS").toString().trim();
                String FATHER_OCCUPATION=result.getString("FATHER_OCCUPATION").toString().trim();
                String MOTHER_OCCUPATION=result.getString("MOTHER_OCCUPATION").toString().trim();
                String ADVISOR=result.getString("ADVISOR").toString().trim();
                String STUDENT_PASSWORD=result.getString("STUDENT_PASSWORD").toString().trim();
                String SSC_GPA=result.getString("SSC_GPA").toString().trim();
                String HSC_GPA=result.getString("HSC_GPA").toString().trim();
                String MOTHER_ANNUAL_INCOME=result.getString("MOTHER_ANNUAL_INCOME").toString().trim();
                String FATHER_ANNUAL_INCOME=result.getString("FATHER_ANNUAL_INCOME").toString().trim();
                String DATE_OF_BATH=result.getString("DATE_OF_BATH").toString().trim();
                String STUDENT_ID=result.getString("STUDENT_ID").toString().trim();
                String STUDENT_EMAIL=result.getString("STUDENT_EMAIL").toString().trim();
                
                        //oo.setText("Student id: "+id); 
                        pk.setText("STUDENT_NAME:\n"+STUDENT_NAME+"\n\n   "
                                  +""+"STUDENT_FATHER_NAME :\n"+STUDENT_FATHER_NAME+"\n\n  "
                                  + ""+"STUDENT_MOTHER_NAME :\n"+STUDENT_MOTHER_NAME+"\n\n  "
                                  + ""+"SSC_SCHOOLNAME :\n"+SSC_SCHOOLNAME+"\n\n  "
                                  + ""+"HSC_COLLEGENAME :\n"+HSC_COLLEGENAME+"\n\n  "
                                  + ""+"LOCAL_GUARDIAN :\n"+LOCAL_GUARDIAN+"\n\n  "
                                  + ""+"GUARDIAN_PHONENUM :\n"+GUARDIAN_PHONENUM+"\n\n  "
                                  + ""+"PERMANENT_ADDRESS :\n"+PERMANENT_ADDRESS+"\n\n  "
                                  + ""+"PRESENT_ADDRESS :\n"+PRESENT_ADDRESS+"\n\n  "
                                  + ""+"FATHER_OCCUPATION :\n"+FATHER_OCCUPATION+"\n\n  "
                                  + ""+"MOTHER_OCCUPATION :\n"+MOTHER_OCCUPATION+"\n\n  "
                                  + ""+"ADVISOR :\n"+ADVISOR+"\n\n  "
                                  + ""+"STUDENT_PASSWORD :\n"+STUDENT_PASSWORD+"\n\n  "
                                  + ""+"SSC_GPA :\n"+SSC_GPA+"\n\n  "
                                  + ""+"HSC_GPA :\n"+HSC_GPA+"\n\n  "
                                  + ""+"MOTHER_ANNUAL_INCOME :\n"+MOTHER_ANNUAL_INCOME+"\n\n  "
                                  + ""+"FATHER_ANNUAL_INCOME :\n"+FATHER_ANNUAL_INCOME+"\n\n  "
                                   + ""+"DATE_OF_BATH :\n"+DATE_OF_BATH+"\n\n  "       
                                  + ""+"STUDENT_ID :\n"+STUDENT_ID+"\n\n  "
                                  + ""+"STUDENT_EMAIL :\n"+STUDENT_EMAIL+"\n\n  "
                                  );
                       
                        
                
                
                
            }                     
            else
            {                  
               pk.setText("This ID is not registered");              
            }                      
            statement.close();
            con.close();        
        }
        catch(SQLException se){
             se.printStackTrace();
        }
        catch(Exception e){
            e.printStackTrace();     
            pk.setText("Exception occurred while searching in the STUDENTREG table");
        } 
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
      close();
                         p4advisor l =new p4advisor();
                           l.setVisible(true);  
    }//GEN-LAST:event_jButton2ActionPerformed
public void close()
{
    this.setVisible(false);
    this.dispose();
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(p8advisor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(p8advisor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(p8advisor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(p8advisor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new p8advisor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea pk;
    // End of variables declaration//GEN-END:variables
}
